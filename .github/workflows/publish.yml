name: Publish to Maven Central

on:
  release:
    types: [created]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          cache-read-only: false

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Clean build cache
        run: ./gradlew clean --no-daemon

      - name: Build AAR
        run: ./gradlew assembleRelease --no-daemon

      - name: Find and list AAR files
        run: |
          echo "Looking for AAR files..."
          find . -name "*.aar" -type f
          echo "Listing build outputs..."
          ls -la */build/outputs/aar/ || echo "No aar directory found"

      - name: Publish to Maven Central
        run: ./gradlew publishAndReleaseToMavenCentral --no-configuration-cache --no-daemon --stacktrace
        env:
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.SIGNING_KEY }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.SIGNING_PASSWORD }}

      - name: Upload AAR as Artifact
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-artifact@v4
        with:
          name: exoboost-aar
          path: '**/build/outputs/aar/*.aar'

      - name: Upload AAR to GitHub Release
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          echo "Finding AAR file..."
          AAR_FILE=$(find . -name "*-release.aar" -type f | head -n 1)
          if [ -z "$AAR_FILE" ]; then
            echo "Error: No AAR file found"
            exit 1
          fi
          echo "Found AAR: $AAR_FILE"
          
          # Get version from tag (e.g., 1.0.1-alpha03 from refs/tags/1.0.1-alpha03)
          VERSION="${{ github.ref_name }}"
          
          # Rename AAR to exoboost-{version}.aar
          NEW_NAME="exoboost-${VERSION}.aar"
          cp "$AAR_FILE" "$NEW_NAME"
          
          echo "Uploading $NEW_NAME to release $VERSION"
          gh release upload "$VERSION" "$NEW_NAME" --clobber
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}